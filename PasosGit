Crea una copia local del repositorio ejecutando

git clone /path/to/repository

Si utilizas un servidor remoto, ejecuta

Ejemplo de repositorio

-- http://oclnxprodapp01.serfincor.com.mx:18080/svn/masNomina/SIF/MID-2016

git clone username@host:/path/to/repository


Puedes registrar cambios (añadirlos al Index) usando
git add <filename>

git add .
Este es el primer paso en el flujo de trabajo básico. Para hacer commit a estos cambios usa

git commit -m "Commit message"


Ahora el archivo esta incluído en el HEAD, pero aún no en tu repositorio remoto.


ENVIO DE CAMBIOS


Tus cambios están ahora en el HEAD de tu copia local. Para enviar estos cambios a tu repositorio remoto ejecuta

git push origin master

Reemplaza master por la rama a la que quieres enviar tus cambios. 

Si no has clonado un repositorio ya existente y quieres conectar tu repositorio local a un repositorio remoto, usa

git remote add origin <server>


Ahora podrás subir tus cambios al repositorio remoto seleccionado.

RAMAS:

Crea una nueva rama llamada "feature_x" y cámbiate a ella usando
git checkout -b feature_x
vuelve a la rama principal
git checkout master
y borra la rama
git branch -d feature_x
Una rama nueva no estará disponible para los demás a menos que subas (push) la rama a tu repositorio remoto
git push origin <branch>



ACTUALIZA & FUSIONA

Para actualizar tu repositorio local al commit más nuevo, ejecuta 
git pull
en tu directorio de trabajo para bajar y fusionar los cambios remotos.
Para fusionar otra rama a tu rama activa (por ejemplo master), utiliza
git merge <branch>
en ambos casos git intentará fusionar automáticamente los cambios. Desafortunadamente, no siempre será posible y se podrán producir conflictos. Tú eres responsable de fusionar esos conflictos manualmente al editar los archivos mostrados por git. Después de modificarlos, necesitas marcarlos como fusionados con
git add <filename>
Antes de fusionar los cambios, puedes revisarlos usando
git diff <source_branch> <target_branch>


ETIQUETAS

Se recomienda crear etiquetas para cada nueva versión publicada de un software. Este concepto no es nuevo, ya que estaba disponible en SVN. Puedes crear una nueva etiqueta llamada 1.0.0 ejecutando
git tag 1.0.0 1b2e1d63ff
1b2e1d63ff se refiere a los 10 caracteres del commit id al cual quieres referirte con tu etiqueta. Puedes obtener el commit id con 
git log
también puedes usar menos caracteres que el commit id, pero debe ser un valor único.

